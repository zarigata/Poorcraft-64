plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group = 'com.poorcraft'
version = '1.0.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

ext.lwjglVersion = '3.3.2'
ext.jomlVersion = '1.10.5'
ext.lwjglNatives = 'natives-windows'

dependencies {
    // LWJGL (OpenGL, OpenAL, GLFW)
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    
    // Math library
    implementation "org.joml:joml:$jomlVersion"
    
    // JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    
    // HTTP client for AI APIs
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.8'
    
    // Configuration
    implementation 'com.typesafe:config:1.4.2'
    
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testImplementation 'org.mockito:mockito-core:5.4.0'
}

application {
    mainClass = 'com.poorcraft.Poorcraft64'
    applicationDefaultJvmArgs = [
        '-Xmx4g',
        '-Dfile.encoding=UTF-8',
        '-Djava.awt.headless=true'
    ]
}

javafx {
    version = '17'
    modules = ['javafx.controls', 'javafx.fxml']
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'poorcraft64'
    }
}

test {
    useJUnitPlatform()
}

run {
    systemProperty 'java.library.path', 'libs'
    workingDir = rootProject.projectDir
}

// Custom tasks
task createExe(type: Jar) {
    manifest {
        attributes(
            'Main-Class': 'com.poorcraft.Poorcraft64',
            'Implementation-Title': 'Poorcraft 64',
            'Implementation-Version': version
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
    archiveFileName = 'poorcraft64-${version}.jar'
}

// Create distribution
task dist(type: Copy) {
    dependsOn createExe
    from createExe.outputs.files
    from 'src/main/resources'
    into "${buildDir}/dist"
}

build.dependsOn dist
